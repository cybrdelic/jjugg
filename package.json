{
  "name": "jjugg-test",
  "version": "0.1.0",
  "private": true,
  "workspaces": [
    "packages/*"
  ],
  "scripts": {
    "db:doctor": "tsx database/scripts/db-doctor.ts",
    "db:doctor:fix": "tsx database/scripts/db-doctor.ts --fix --optimize",
    "shell:install-npm-completion": "pwsh -NoProfile -ExecutionPolicy Bypass -File scripts/ps/install-npm-run-completion.ps1",
    "shell:export-profile": "pwsh -NoProfile -ExecutionPolicy Bypass -File scripts/ps/export-profile.ps1",
    "db:precheck": "npx tsx database/scripts/precheck-migrations.ts",
    "db:debug": "for %f in (database/*.db) do echo ==== %f ==== && sqlite3 %f \".tables\"",
    "db:migrate:bulletproof": "npx tsx database/scripts/bulletproof-migrate.ts",
    "db:migrate:one": "npx tsx database/scripts/apply-single-migration.ts --file",
    "db:backup": "copy database/jjugg.db database/jjugg.db.bak",
    "db:restore": "copy /Y database/jjugg.db.bak database/jjugg.db",
    "db:schema": "sqlite3 database/jjugg.db \".schema\"",
    "infra:copilot": "npm run db:precheck && npm run db:backup && npm run db:migrate:bulletproof && npm run db:schema && npm run db:debug",
    "dev:web": "npx next dev",
    "dev": "concurrently -k -n web,daemon -c green,cyan \"npm run dev:web\" \"npm run daemon:dev\"",
    "build": "npx next build",
    "start": "next start",
    "lint": "next lint",
    "test": "vitest run",
    "test:watch": "vitest",
    "tailwind:init": "tailwindcss init -p",
    "db:seed": "tsx database/scripts/seed.ts",
    "db:unseed": "tsx database/scripts/unseed.ts",
    "db:reset": "npm run db:unseed && npm run db:seed",
    "db:setup": "tsx database/scripts/setup.ts",
    "db:migrate": "tsx database/scripts/migrate-runner.ts up",
    "db:migrate:down": "tsx database/scripts/migrate-runner.ts down",
    "db:migrate:status": "tsx database/scripts/migrate-runner.ts status",
    "db:migrate:create": "tsx database/scripts/migrate-runner.ts create",
    "db:migrate:create:drop-mvp": "tsx database/scripts/create-drop-mvp-migration.ts",
    "db:migrate:drop-mvp": "npm run db:migrate:create:drop-mvp && npm run db:migrate",
    "test:ssl": "node scripts/test-ssl-trust.js",
    "db:seed:10k": "tsx database/scripts/seed.ts",
    "db:reset:10k": "npm run db:unseed && npm run db:seed:10k",
    "analyze-components": "node scripts/analyze-components.js",
    "analyze-components:top10": "node scripts/analyze-components.js -- --top 10",
    "analyze-components:large": "node scripts/analyze-components.js -- --min-lines 100 --top 15",
    "analyze-components:feature-flag-activated": "node scripts/analyze-components.js -- --feature-flag-activated",
    "apps:stats": "node scripts/manage-apps.js stats",
    "apps:list": "node scripts/manage-apps.js list",
    "apps:list:active": "node scripts/manage-apps.js list --status=active",
    "apps:list:shortlisted": "node scripts/manage-apps.js list --status=shortlisted",
    "apps:list:archived": "node scripts/manage-apps.js list --status=archived",
    "apps:archive": "node scripts/manage-apps.js archive",
    "apps:unarchive": "node scripts/manage-apps.js unarchive",
    "apps:shortlist": "node scripts/manage-apps.js shortlist",
    "apps:unshortlist": "node scripts/manage-apps.js unshortlist",
    "apps:export:json": "curl -s http://localhost:3001/api/admin/export > applications-export.json && echo 'Exported to applications-export.json'",
    "apps:export:csv": "curl -s http://localhost:3001/api/admin/export?format=csv > applications-export.csv && echo 'Exported to applications-export.csv'",
    "find-dead-paths": "node scripts/find-dead-paths.js",
    "find-dead-paths:json": "node scripts/find-dead-paths.js --json",
    "email:ingest:once": "tsx scripts/email_ingest_daemon.ts",
    "email:reset-sync": "sqlite3 database/jjugg.db \"UPDATE email_sync_state SET last_uid=0, updated_at=CURRENT_TIMESTAMP;\" && echo Last UID reset to 0",
    "email:reset-sync:and-pending": "sqlite3 database/jjugg.db \"UPDATE email_sync_state SET last_uid=0; UPDATE emails SET parse_status='pending', openai_model=NULL, openai_prompt_tokens=NULL, openai_completion_tokens=NULL, openai_total_tokens=NULL, openai_cost_usd=NULL, parsed_json=NULL, parsed_at=NULL;\" && echo Sync + email parse state reset",
    "dead-code": "tsx scripts/analyze-dead-code.ts",
    "dead-code:json": "tsx scripts/analyze-dead-code.ts --json",
    "db:explore": "sqlite3 -cmd \".read scripts/sql/explore.sql\" database/jjugg.db",
    "db:admin": "dbgate-serve",
    "daemon:dev": "npm --workspace @jjugg/dev-api run dev",
    "daemon:build": "npm --workspace @jjugg/dev-api run build",
    "daemon:start": "npm --workspace @jjugg/dev-api run start"
  },
  "dependencies": {
    "@heroicons/react": "^2.2.0",
    "@types/better-sqlite3": "^7.6.13",
    "@types/dompurify": "^3.0.5",
    "better-sqlite3": "^12.2.0",
    "commander": "^12.1.0",
    "dompurify": "^3.2.6",
    "dotenv": "^17.2.1",
    "formidable": "^3.5.4",
    "imap-simple": "^5.1.0",
    "imapflow": "^1.0.193",
    "lucide-react": "^0.482.0",
    "mailparser": "^3.7.4",
    "next": "15.2.2",
    "openai": "^4.88.0",
    "pdfjs-dist": "^5.0.375",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "react-pdf": "^9.2.1"
  },
  "devDependencies": {
    "@faker-js/faker": "^9.9.0",
    "@tailwindcss/aspect-ratio": "^0.4.2",
    "@tailwindcss/container-queries": "^0.1.1",
    "@tailwindcss/forms": "^0.5.10",
    "@tailwindcss/postcss": "^4",
    "@tailwindcss/typography": "^0.5.16",
    "@types/canvas-confetti": "^1.9.0",
    "@types/formidable": "^3.4.5",
    "@types/imap-simple": "^4.2.10",
    "@types/jsdom": "^21.1.7",
    "@types/node": "^20",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "@vitest/coverage-v8": "^2.0.0",
    "autoprefixer": "^10.4.21",
    "canvas-confetti": "^1.9.3",
    "concurrently": "^9.2.0",
    "critters": "^0.0.23",
    "dbgate-serve": "^6.6.1",
    "jsdom": "^24.0.0",
    "postcss": "^8.5.3",
    "tailwindcss": "^3.2.7",
    "tsx": "^4.20.3",
    "typescript": "^5",
    "vitest": "^2.0.0"
  }
}
